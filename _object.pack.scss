// =============================================================================
//
// Name:          Pack
//
// Description:   Causes any number of elements pack up horizontally to
//                automatically fill an equal, fluid width of their parent.
//
// Block:         `o-pack`
//
// Element:       `o-pack__item`
//
// Modifiers:     `o-pack--auto`
//                `o-pack--tiny`
//                `o-pack--small`
//                `o-pack--large`
//                `o-pack--huge`
//                `o-pack--rev`
//                `o-pack--middle`
//                `o-pack--bottom`
//
// Markup:
//
// <div class="o-pack">
//     <div class="o-pack__item">
//         Foo
//     </div>
//     <div class="o-pack__item">
//         Bar
//     </div>
//     <div class="o-pack__item">
//         Baz
//     </div>
// </div>
//
// =============================================================================





// Variables
// =============================================================================

// Predefine the variables below in order to alter and enable specific features.

$tree-pack-namespace:        $tree-namespace !default;

$tree-pack-gutter:           $tree-base-spacing-unit !default;
$tree-pack-gutter--tiny:       quarter($tree-pack-gutter) !default;
$tree-pack-gutter--small:        halve($tree-pack-gutter) !default;
$tree-pack-gutter--large:       double($tree-pack-gutter) !default;
$tree-pack-gutter--huge:     quadruple($tree-pack-gutter) !default;

$tree-enable-pack--auto:     false !default;
$tree-enable-pack--tiny:     false !default;
$tree-enable-pack--small:    false !default;
$tree-enable-pack--large:    false !default;
$tree-enable-pack--huge:     false !default;
$tree-enable-pack--rev:      false !default;
$tree-enable-pack--middle:   false !default;
$tree-enable-pack--bottom:   false !default;





// =============================================================================
// Block: `o-pack`
// =============================================================================

// 1. Fill all available space.
// 2. Cause children to be automatically equally sized.

.#{$tree-pack-namespace}o-pack {
    width: 100%; // [1]
    display: table;
    table-layout: fixed; // [2]
}

    // Element: `o-pack__item`
    // =========================================================================

    // Cause children to adopt table-like structure.

    .#{$tree-pack-namespace}o-pack__item {
        display: table-cell;

        @if ($tree-enable-pack--middle == true) {

            // Modifier: `o-pack--middle`
            // =================================================================

            // All items are aligned to the middles of each other.

            .#{$tree-pack-namespace}o-pack--middle > & {
                vertical-align: middle;
            }

        }

        @if ($tree-enable-pack--bottom == true) {

            // Modifier: `o-pack--bottom`
            // =================================================================

            // All items are aligned to the bottoms of each other.

            .#{$tree-pack-namespace}o-pack--bottom > & {
                vertical-align: bottom;
            }

        }

    }





@if ($tree-enable-pack--auto == true) {

    // Modifier: `o-pack--auto`
    // =========================================================================

    // Cause children to pack up into available space, but not equally sized.

    .#{$tree-pack-namespace}o-pack--auto {
        table-layout: auto;
    }

}





@if ($tree-enable-pack--tiny == true) {

    // Modifier: `o-pack--tiny`
    // =========================================================================

    // Tiny gutters between items.

    .#{$tree-pack-namespace}o-pack--tiny {
        border-spacing: $tree-pack-gutter--tiny;
    }

}

@if ($tree-enable-pack--small == true) {

    // Modifier: `o-pack--small`
    // =========================================================================

    // Small gutters between items.

    .#{$tree-pack-namespace}o-pack--small {
        border-spacing: $tree-pack-gutter--small;
    }

}

@if ($tree-enable-pack--large == true) {

    // Modifier: `o-pack--large`
    // =========================================================================

    // Large gutters between items.

    .#{$tree-pack-namespace}o-pack--large {
        border-spacing: $tree-pack-gutter--large;
    }

}

@if ($tree-enable-pack--huge == true) {

    // Modifier: `o-pack--huge`
    // =========================================================================

    // Huge gutters between items.

    .#{$tree-pack-namespace}o-pack--huge {
        border-spacing: $tree-pack-gutter--huge;
    }

}





@if ($tree-enable-pack--rev == true) {

    // Modifier: `o-pack--rev`
    // =========================================================================

    // Reversed order packs.

    .#{$tree-pack-namespace}o-pack--rev {
        direction: rtl;

        > .#{$tree-pack-namespace}o-pack__item {
            direction: ltr;
        }

    }

}
